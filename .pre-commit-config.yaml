# Pre-commit configuration for MCP Shipping Suite
# See https://pre-commit.com for more information

repos:
  # General file formatting and linting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
        exclude: '\.lock$'
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: detect-private-key
      - id: detect-aws-credentials
        args: ['--allow-missing-credentials']

  # TypeScript and JavaScript linting
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.15.0
    hooks:
      - id: eslint
        files: \.(ts|tsx|js|jsx)$
        additional_dependencies:
          - '@typescript-eslint/eslint-plugin'
          - '@typescript-eslint/parser'
          - 'eslint-plugin-import'
        args: ['--fix']

  # Prettier formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(ts|tsx|js|jsx|json|md|yml|yaml|html|css|scss)$
        exclude: |
          (?x)^(
            package-lock\.json|
            pnpm-lock\.yaml|
            \.nx/|
            dist/|
            coverage/|
            node_modules/
          )$

  # Python linting and formatting (if Python files exist)
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.11

  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-import-order
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      - id: ruff
        args: ['--fix']

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            \.env\.example|
            package-lock\.json|
            pnpm-lock\.yaml|
            \.lock$
          )$

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ['-d', 'relaxed']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        args: ['--fix']
        exclude: |
          (?x)^(
            CHANGELOG\.md|
            \.github/
          )$

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: ['--severity=warning']

  # Git commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.29.1
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Local hooks for project-specific checks
  - repo: local
    hooks:
      # Nx project linting
      - id: nx-lint-affected
        name: Nx Lint Affected
        entry: bash -c 'cd /home/runner/work/perplexity-mcp-shipping-suite/perplexity-mcp-shipping-suite && source /home/runner/.bashrc && pnpm nx affected -t lint --fix'
        language: system
        files: \.(ts|tsx|js|jsx)$
        pass_filenames: false

      # TypeScript type checking
      - id: typescript-check
        name: TypeScript Type Check
        entry: bash -c 'cd /home/runner/work/perplexity-mcp-shipping-suite/perplexity-mcp-shipping-suite && source /home/runner/.bashrc && pnpm run typecheck'
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false

      # Check for TODO/FIXME comments in production files
      - id: no-todos-in-production
        name: No TODOs in production files
        entry: bash -c 'grep -r "TODO\|FIXME\|XXX" --include="*.ts" --include="*.tsx" --exclude-dir=node_modules --exclude-dir=dist apps/ libs/ && exit 1 || exit 0'
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false
        stages: [push]

      # Validate environment files
      - id: validate-env-files
        name: Validate environment files
        entry: bash -c 'for file in .env*; do [ -f "$file" ] && echo "Environment file $file should not be committed" && exit 1; done || exit 0'
        language: system
        files: '^\.env'

      # Check that shared libraries build before apps
      - id: build-order-check
        name: Verify build order (libs before apps)
        entry: bash -c 'cd /home/runner/work/perplexity-mcp-shipping-suite/perplexity-mcp-shipping-suite && source /home/runner/.bashrc && pnpm run build:libs'
        language: system
        files: '(libs/.*\.(ts|tsx)|apps/.*\.(ts|tsx))'
        pass_filenames: false

# Pre-commit configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '3.0.0'

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false