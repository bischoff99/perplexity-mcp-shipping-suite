{
  "graph": {
    "nodes": {
      "web-dashboard-e2e": {
        "name": "web-dashboard-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/web-dashboard-e2e",
          "name": "web-dashboard-e2e",
          "tags": [
            "npm:private",
            "type:e2e",
            "scope:web-dashboard"
          ],
          "implicitDependencies": [
            "web-dashboard"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "web-dashboard-e2e",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "e2e": {
              "executor": "@nx/playwright:playwright",
              "outputs": [
                "{workspaceRoot}/dist/.playwright"
              ],
              "options": {
                "config": "apps/web-dashboard-e2e/playwright.config.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/web-dashboard-e2e/**/*.{js,ts}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore"
              ]
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/web-dashboard-e2e/src",
          "projectType": "application"
        }
      },
      "ui-components": {
        "name": "ui-components",
        "type": "lib",
        "data": {
          "root": "libs/ui-components",
          "name": "ui-components",
          "tags": [
            "npm:public",
            "type:lib",
            "scope:ui-components"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "ui-components",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "perplexity-mcp-shipping-suite": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/vite:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/ui-components"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/ui-components/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore"
              ]
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "../../coverage/libs/ui-components"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "typecheck": {
              "executor": "@nx/vite:test",
              "options": {
                "config": "libs/ui-components/vite.config.ts",
                "run": false,
                "typecheck": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/ui-components/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "web-dashboard": {
        "name": "web-dashboard",
        "type": "app",
        "data": {
          "root": "apps/web-dashboard",
          "name": "web-dashboard",
          "tags": [
            "npm:private",
            "type:app",
            "scope:web-dashboard"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "start",
                "test:watch"
              ]
            },
            "js": {
              "packageName": "web-dashboard",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "next dev -p 3004",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "next start -p 3004",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "jest --watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/web-dashboard"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/web-dashboard"
                },
                "production": {}
              },
              "parallelism": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "web-dashboard:build",
                "dev": true,
                "port": 3003
              },
              "configurations": {
                "development": {
                  "buildTarget": "web-dashboard:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "web-dashboard:build:production",
                  "dev": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "web-dashboard:build:production"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/web-dashboard/jest.config.js",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/web-dashboard/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore"
              ]
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/web-dashboard/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "mcp-client": {
        "name": "mcp-client",
        "type": "lib",
        "data": {
          "root": "libs/mcp-client",
          "name": "mcp-client",
          "tags": [
            "npm:private",
            "type:lib",
            "scope:mcp-client"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "mcp-client",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "perplexity-mcp-shipping-suite": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/mcp-client",
                "main": "libs/mcp-client/src/index.ts",
                "tsConfig": "libs/mcp-client/tsconfig.lib.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/mcp-client/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/mcp-client/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverageReporters": [
                    "text"
                  ]
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "typecheck": {
              "executor": "@nx/js:tsc",
              "options": {
                "tsConfig": "libs/mcp-client/tsconfig.lib.json",
                "noEmit": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/mcp-client/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "easypost": {
        "name": "easypost",
        "type": "app",
        "data": {
          "root": "apps/easypost",
          "name": "easypost",
          "tags": [
            "npm:public",
            "npm:mcp",
            "npm:model-context-protocol",
            "npm:easypost",
            "npm:shipping",
            "npm:api",
            "npm:json-rpc",
            "npm:typescript",
            "npm:docker",
            "type:app",
            "scope:easypost"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "start",
                "clean",
                "test:watch",
                "test:coverage",
                "test:e2e",
                "lint:fix",
                "format",
                "format:check",
                "docker:build",
                "docker:run",
                "precommit",
                "prepublishOnly"
              ]
            },
            "description": "Production-ready EasyPost MCP Server implementing Model Context Protocol for shipping automation",
            "js": {
              "packageName": "@mcp-shipping/easypost-mcp-server",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx --watch src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist coverage",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "jest --watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "jest --coverage --passWithNoTests",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e"
              },
              "metadata": {
                "scriptContent": "jest --config jest.e2e.config.js --passWithNoTests",
                "runCommand": "pnpm run test:e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint:fix": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint:fix"
              },
              "metadata": {
                "scriptContent": "eslint src tests --ext .ts --fix",
                "runCommand": "pnpm run lint:fix"
              },
              "configurations": {},
              "parallelism": true
            },
            "format": {
              "executor": "nx:run-script",
              "options": {
                "script": "format"
              },
              "metadata": {
                "scriptContent": "prettier --write src tests",
                "runCommand": "pnpm run format"
              },
              "configurations": {},
              "parallelism": true
            },
            "format:check": {
              "executor": "nx:run-script",
              "options": {
                "script": "format:check"
              },
              "metadata": {
                "scriptContent": "prettier --check src tests",
                "runCommand": "pnpm run format:check"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:build": {
              "executor": "nx:run-script",
              "options": {
                "script": "docker:build"
              },
              "metadata": {
                "scriptContent": "docker build -t easypost-mcp .",
                "runCommand": "pnpm run docker:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "docker:run"
              },
              "metadata": {
                "scriptContent": "docker run -p 3000:3000 --env-file .env easypost-mcp",
                "runCommand": "pnpm run docker:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "precommit": {
              "executor": "nx:run-script",
              "options": {
                "script": "precommit"
              },
              "metadata": {
                "scriptContent": "npm run lint && npm run typecheck && npm run test",
                "runCommand": "pnpm run precommit"
              },
              "configurations": {},
              "parallelism": true
            },
            "prepublishOnly": {
              "executor": "nx:run-script",
              "options": {
                "script": "prepublishOnly"
              },
              "metadata": {
                "scriptContent": "npm run clean && npm run build && npm run test",
                "runCommand": "pnpm run prepublishOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/easypost",
                "main": "apps/easypost/src/index.ts",
                "tsConfig": "apps/easypost/tsconfig.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "easypost:build",
                "inspect": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "easypost:build"
                },
                "production": {
                  "buildTarget": "easypost:build:production"
                }
              },
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/easypost/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/easypost/jest.config.cjs",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverageReporters": [
                    "text"
                  ]
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "typecheck": {
              "executor": "@nx/js:tsc",
              "options": {
                "tsConfig": "apps/easypost/tsconfig.json",
                "noEmit": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/easypost/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@perplexity/shared": {
        "name": "@perplexity/shared",
        "type": "lib",
        "data": {
          "root": "libs/shared",
          "name": "@perplexity/shared",
          "tags": [
            "npm:public",
            "npm:mcp",
            "npm:shipping",
            "npm:shared",
            "npm:utilities",
            "npm:types",
            "type:lib",
            "scope:shared"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "clean",
                "dev"
              ]
            },
            "description": "Shared utilities and types for MCP shipping automation platform",
            "js": {
              "packageName": "@mcp-shipping/shared",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --build --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/shared",
                "main": "libs/shared/src/index.ts",
                "tsConfig": "libs/shared/tsconfig.lib.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/shared/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/shared/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverageReporters": [
                    "text"
                  ]
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "typecheck": {
              "executor": "@nx/js:tsc",
              "options": {
                "tsConfig": "libs/shared/tsconfig.lib.json",
                "noEmit": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "veeqo": {
        "name": "veeqo",
        "type": "app",
        "data": {
          "root": "apps/veeqo",
          "name": "veeqo",
          "tags": [
            "npm:public",
            "npm:mcp",
            "npm:model-context-protocol",
            "npm:veeqo",
            "npm:inventory",
            "npm:ecommerce",
            "npm:api",
            "npm:json-rpc",
            "npm:typescript",
            "npm:docker",
            "npm:orders",
            "npm:products",
            "npm:warehouse",
            "npm:webhooks",
            "type:app",
            "scope:veeqo"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "start",
                "clean",
                "test:watch",
                "test:coverage",
                "test:e2e",
                "lint:fix",
                "format",
                "format:check",
                "docker:build",
                "docker:run",
                "precommit",
                "prepublishOnly",
                "webhook:dev"
              ]
            },
            "description": "Production-ready Veeqo MCP Server implementing Model Context Protocol for inventory management and order automation",
            "js": {
              "packageName": "@mcp-shipping/veeqo-mcp-server",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx --watch src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist coverage",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "jest --watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "jest --coverage --passWithNoTests",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:e2e": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:e2e"
              },
              "metadata": {
                "scriptContent": "jest --config jest.e2e.config.js --passWithNoTests",
                "runCommand": "pnpm run test:e2e"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint:fix": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint:fix"
              },
              "metadata": {
                "scriptContent": "eslint src tests --ext .ts --fix",
                "runCommand": "pnpm run lint:fix"
              },
              "configurations": {},
              "parallelism": true
            },
            "format": {
              "executor": "nx:run-script",
              "options": {
                "script": "format"
              },
              "metadata": {
                "scriptContent": "prettier --write src tests",
                "runCommand": "pnpm run format"
              },
              "configurations": {},
              "parallelism": true
            },
            "format:check": {
              "executor": "nx:run-script",
              "options": {
                "script": "format:check"
              },
              "metadata": {
                "scriptContent": "prettier --check src tests",
                "runCommand": "pnpm run format:check"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:build": {
              "executor": "nx:run-script",
              "options": {
                "script": "docker:build"
              },
              "metadata": {
                "scriptContent": "docker build -t veeqo-mcp .",
                "runCommand": "pnpm run docker:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:run": {
              "executor": "nx:run-script",
              "options": {
                "script": "docker:run"
              },
              "metadata": {
                "scriptContent": "docker run -p 3000:3000 --env-file .env veeqo-mcp",
                "runCommand": "pnpm run docker:run"
              },
              "configurations": {},
              "parallelism": true
            },
            "precommit": {
              "executor": "nx:run-script",
              "options": {
                "script": "precommit"
              },
              "metadata": {
                "scriptContent": "npm run lint && npm run typecheck && npm run test",
                "runCommand": "pnpm run precommit"
              },
              "configurations": {},
              "parallelism": true
            },
            "prepublishOnly": {
              "executor": "nx:run-script",
              "options": {
                "script": "prepublishOnly"
              },
              "metadata": {
                "scriptContent": "npm run clean && npm run build && npm run test",
                "runCommand": "pnpm run prepublishOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "webhook:dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "webhook:dev"
              },
              "metadata": {
                "scriptContent": "npm run dev -- --webhook-port=3001",
                "runCommand": "pnpm run webhook:dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/veeqo",
                "main": "apps/veeqo/src/index.ts",
                "tsConfig": "apps/veeqo/tsconfig.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "executor": "@nx/js:node",
              "defaultConfiguration": "development",
              "dependsOn": [
                "build"
              ],
              "options": {
                "buildTarget": "veeqo:build",
                "inspect": false
              },
              "configurations": {
                "development": {
                  "buildTarget": "veeqo:build"
                },
                "production": {
                  "buildTarget": "veeqo:build:production"
                }
              },
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/veeqo/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore"
              ]
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/veeqo/jest.config.cjs",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "ci": true,
                  "coverageReporters": [
                    "text"
                  ]
                }
              },
              "parallelism": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ]
            },
            "typecheck": {
              "executor": "@nx/js:tsc",
              "options": {
                "tsConfig": "apps/veeqo/tsconfig.json",
                "noEmit": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/veeqo/src",
          "projectType": "application",
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "web-dashboard-e2e": [
        {
          "source": "web-dashboard-e2e",
          "target": "web-dashboard",
          "type": "implicit"
        }
      ],
      "ui-components": [],
      "web-dashboard": [],
      "mcp-client": [
        {
          "source": "mcp-client",
          "target": "@perplexity/shared",
          "type": "static"
        }
      ],
      "easypost": [],
      "@perplexity/shared": [],
      "veeqo": []
    }
  }
}