version: '3.8'

services:
  easypost:
    build: 
      context: ./apps/easypost
      dockerfile: Dockerfile
    container_name: perplexity-easypost
    restart: unless-stopped
    ports:
      - "${EASYPOST_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - EASYPOST_API_KEY=${EASYPOST_API_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - perplexity-network

  veeqo:
    build:
      context: ./apps/veeqo
      dockerfile: Dockerfile
    container_name: perplexity-veeqo
    restart: unless-stopped
    ports:
      - "${VEEQO_PORT:-3002}:3002"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VEEQO_API_KEY=${VEEQO_API_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - perplexity-network

  web-dashboard:
    build:
      context: ./apps/web-dashboard
      dockerfile: Dockerfile
    container_name: perplexity-web
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-3003}:3003"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_EASYPOST_URL=http://easypost:3000
      - NEXT_PUBLIC_VEEQO_URL=http://veeqo:3002
    depends_on:
      - easypost
      - veeqo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - perplexity-network

  redis:
    image: redis:7.2-alpine
    container_name: perplexity-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - perplexity-network
    volumes:
      - redis-data:/data

networks:
  perplexity-network:
    driver: bridge

volumes:
  redis-data:
